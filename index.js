$(".fileForm").submit((e) => {
    e.preventDefault();
    let text = e.target[1].value;
    // let fileName = e.target[2].value;
    const filePath = './readableFiles/autogenerated.txt';
    // console.log(e);
    
    if(text && filePath) {
        if((e.target[7].checked && e.target[8].checked) || (!e.target[7].checked && !e.target[8].checked)) {
            // If both or neither file type is selected - error out
            $("#modalContent")[0].textContent = "Don't forget to specify the file type."
            $("#ovrly").fadeIn();
	        $("#modal").show();
	        $("#modal").animate({top: "100"});
        } else {
            if(e.target[3].checked) {
                // Checking letters only
                console.log("check for letters");
            }
            if(e.target[4].checked) {
                // Checking words only
                let searchingText = separateText(text)
                console.log(`Searching for '${searchingText}' in ${filePath}`);
                if(e.target[7].checked){
                    readTxtFile(filePath, searchingText);
                }
                if(e.target[8].checked) {
                    readJsonFile(filePath, searchingText);
                }
            }
            if(e.target[5].checked) {
                console.log("check for phrases");
            }
        }
    } else {
        // Error Modal
        $("#ovrly").fadeIn();
	    $("#modal").show();
	    $("#modal").animate({top: "100"});

    }
})

// modal button event listeners
$("#ovrly").click(function () {
    $("#ovrly").hide();
    $("#modal").hide();
    $("#modal").css("top", "-310px");
    $("#modalHeader")[0].innerHTML = "Disclaimer"
    $("#modalContent")[0].innerHTML = "Don't Forget to Add Words to Search For."
});
$("#cross").click(function () {
    $("#ovrly").hide();
    $("#modal").hide();
    $("#modal").css("top", "-310px");
    $("#modalHeader")[0].innerHTML = "Disclaimer"
    $("#modalContent")[0].innerHTML = "Don't Forget to Add Words to Search For."
});
$(".searchMoreInfo").click(function () {
    $("#modalHeader")[0].innerHTML = "Search Info"
    $("#modalContent")[0].innerHTML = "1. Separate words with tilde (~)<br />2. Punctuation other than the apostrophe (') doesn't matter<br />3. Caps don't matter"
    $("#ovrly").fadeIn();
    $("#modal").show();
    $("#modal").animate({top: "100"});
})

// split all searching text and return array of searching text
function separateText(text) {
    const searchingText = text.split("~");
    const lower = searchingText.map(ele => {
        return ele.toLowerCase();
    })
    return lower;
}

// get all data content from .txt files
function readTxtFile(file, searchingText) {
    console.log("reading file, searching for words");
    fetch(file)
    .then(res => res.text())
    .then(data => {getIndices(data.toLowerCase(), searchingText, true)})
}

// get all data content from .txt files
function readJsonFile(file, searchingText) {
    console.log("reading file, searching for words");
    fetch(file)
    .then(res => res.json())
    .then(data => {getIndices(data, searchingText, false)})
}

// get all indices when searching words are found
function getIndices(content, searchingText, txtFile) {
    // console.log("----------------------");
    // console.log(content);
    // console.log("----------------------");
    let index = 0;
    let iterations = 0;
    // let total = wordArray.length;        only used for progress bar

    if(txtFile) {
        const wordArray = splitByWord(content, txtFile);
        let indexArray = [];
        wordArray.forEach(word => {
            searchingText.forEach(searcher => {
                if(word === searcher) {
                    console.log(`found '${searcher}' at index: ${index}`);
                    indexArray.push(index);
                }
                iterations++;
            })
            index++;
            // progressUpdate(index, total)         only usable with large files that take awhile to run through
        });
        console.log(`iterations: ${iterations} \nwords: ${index}`);
        console.log(wordArray);
    }
}

// Split words by spaces (plan to move this to remove all regex as well)
// May need to make this remove punctuation as well (not entirely sure yet though)
function splitByWord(content, txtFile) {
    if(txtFile) {
        // for .txt files
        let fixed = content.replace(/\r?\n|\r/g, " ").replace(/[.,/#!$%^&*;:{}=-_`~()]/g, "");
        return fixed.split(" ");
    }
    // for .json files
    return content
}

// Only works with large files (for now will not be used but I like the idea)
function progressUpdate(index, total) {
    if(index === 0) {
        $(".progressContainer").show()
    }
    let progress = (Math.round(index/total) * 100)
    $(".progress-bar").css("width", progress + "%").text(progress + "%");
    if(progress === 100) {
        $(".progressContainer").hide()
    }
}